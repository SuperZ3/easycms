{"version":3,"sources":["store/store.js","store/type.js","components/Form.js","components/FormItem.js","store/action.js","pages/Login.js","pages/Sign.js","pages/Home.js","routerconfig.js","pages/Providehome.js","App.js","serviceWorker.js","index.js"],"names":["store","createStore","state","isLogin","action","type","Form","props","name","onFinish","onFinishField","onSubmit","bind","addDepend","getFieldValue","depEl","this","refs","value","item","el","listener","push","e","values","validate","axios","method","url","data","qs","stringify","then","success","code","catch","err","preventDefault","vals","Object","keys","every","formitem","validator","sign","newChildren","React","Children","map","children","child","cloneElement","ref","noValidate","Component","FormItem","width","rules","required","find","label","dependencies","onChange","length","forEach","val","target","rule","fn","setState","error","console","log","ret","some","test","message","isButton","htmlType","style","display","marginBottom","justifyContent","alignItems","htmlFor","marginRight","marginTop","color","flexDirection","title","border","float","margin","PureComponent","login","payload","out","Login","wrong","runSign","result","token","window","localStorage","setItem","history","to","position","top","left","height","className","userurl","onClick","connect","Sign","getCaptcha","captcha","gologin","replace","emailvalue","c1","email","time","timer","setInterval","clearInterval","get","params","res","marginLeft","dependcies","Promise","reject","resolve","noStyle","Home","zancun","datawant","columns","btext","lessNine","del","personurl","dataIndex","key","render","text","src","alt","record","size","avatar","personname","jobnumber","years","pers","persons","delete","change","late","filter","parseInt","pagination","count","pageSize","dataSource","Comp","component","rest","getItem","headers","removeItem","alert","pathname","App","path","exact","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+PAqBA,IAEeA,EAFDC,aAlBd,WAEU,IAFOC,EAER,uDAFgB,CACrBC,SAAQ,GACVC,EAAO,uCACL,OAAQA,EAAOC,MACX,ICPgB,WDQZH,EAAQ,CACJC,SAAQ,GAEZ,MACJ,ICXc,SDYVD,EAAQ,CACJC,SAAQ,GAIpB,OAAOD,K,sIEmEII,E,kDAhFX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,KAAOD,EAAMC,KAClB,EAAKC,SAAWF,EAAME,UAAY,GAClC,EAAKC,cAAgBH,EAAMG,eAAiB,GAC5C,EAAKN,OAASG,EAAMH,OAEpB,EAAKO,SAAW,EAAKA,SAASC,KAAd,gBAChB,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBAEjB,EAAKE,cAAgB,EAAKA,cAAcF,KAAnB,gBAVP,E,0DAaJG,GAGV,OAFWC,KAAKC,KACIF,GAAOG,Q,gCAIrBC,EAAKC,GACAJ,KAAKC,KACXE,GAAME,SAASC,KAAKF,K,+BAGpBG,GAAG,IAAD,OACHC,EAAS,GACTP,EAAOD,KAAKC,KACZb,EAASY,KAAKZ,OAELY,KAAKS,SAASR,EAAKO,IAG5BE,IAAM,CACFC,OAAO,OACPC,IAAIxB,EACJyB,KAAKC,IAAGC,UAAUP,KACnBQ,MAAK,SAAAC,GAEQ,IADCA,EAAQJ,KAAhBK,KAED,EAAKzB,SAASwB,EAAQJ,MAEtB,EAAKnB,cAAcuB,EAAQJ,SAEhCM,OAAM,SAAAC,GACL,EAAK1B,cAAc0B,MAG3Bb,EAAEc,mB,+BAGGpB,EAAKqB,GAiBV,OAhBWC,OAAOC,KAAKvB,GAAMwB,OAAM,SAAAtB,GAC/B,IAAIuB,EAAWzB,EAAKE,GAEpB,OADAmB,EAAKnB,GAAQuB,EAASxB,MACfwB,EAASC,UAAUD,EAAQ,MAAUA,EAAQ,SAAeA,EAASxC,MAAM0C,U,+BAgBjF,IAAD,OACAC,EAAcC,IAAMC,SAASC,IAAIhC,KAAKT,MAAM0C,UAAS,SAAAC,GAAK,OAAIJ,IAAMK,aAAaD,EAAM,CAACE,IAAIF,EAAM3C,MAAMC,KAAKK,UAAU,EAAKA,UAAUC,cAAc,EAAKA,mBAC7J,OAAO,0BAAMH,SAAUK,KAAKL,SAAU0C,YAAU,GAEvCR,O,GA3EEC,IAAMQ,WCoIVC,E,kDAjIX,WAAYhD,GAAO,IAAD,8BACd,cAAMA,IAEDiD,MAAQjD,EAAMiD,OAAS,QAE5B,EAAKC,MAAQlD,EAAMkD,OAAS,GAC5B,EAAKC,WAAW,EAAKD,MAAME,MAAK,SAAAxC,GAAI,OAAsB,IAAlBA,EAAKuC,YAE7C,EAAKE,MAAQrD,EAAMqD,OAAS,GAC5B,EAAKpD,KAAOD,EAAMC,MAAQ,GAE1B,EAAKqD,aAAetD,EAAMsD,cAAgB,GAC1C,EAAKC,SAAW,EAAKA,SAASlD,KAAd,gBAEhB,EAAKS,SAAW,GAEhB,EAAKR,UAAYN,EAAMM,UAEvB,EAAKC,cAAgBP,EAAMO,cAE3B,EAAKI,MAAQ,GACb,EAAKhB,MAAQ,CACX0C,KAAK,IAtBO,E,gEA0BE,IAAD,OACd5B,KAAK6C,aAAaE,QAAU,GAC7B/C,KAAK6C,aAAaG,SAAQ,SAAA7C,GACxB,EAAKN,UAAUM,EAAK,Q,+BAKjBI,GAAG,IAAD,OACL0C,EAAM1C,EAAE2C,OAAOhD,MACfV,EAAOe,EAAE2C,OAAO1D,KAChBM,EAAgBE,KAAKF,cACrBqD,EAAOnD,KAAKyC,MACZW,EAAKD,EAAKR,MAAK,SAAAxC,GAAI,MAAoB,oBAATA,KAClC,GAAGiD,EACD,IACEA,EAAG,CAACtD,kBAAJ,UAAiCE,KAAKyC,MAAMQ,GAC3C9B,OAAM,SAAAC,GACL,EAAKiC,SAAS,CACZzB,KAAKR,OAGT,MAAOkC,GACPC,QAAQC,IAAI,0BAGhBxD,KAAK2B,UAAUwB,EAAKF,EAAIzD,EAAK4D,EAAGtD,K,gCAGxBqD,EAAKjD,EAAMV,GAAM,IAAD,OACpBiE,GAAON,EAAKO,MAAK,SAAAvD,GACjB,OAAGA,EAAI,WAAiBD,GAKG,UAAjBC,EAAI,MAAyBD,IAAW,iFAAiFyD,KAAKzD,IAJtI,EAAKmD,SAAS,CACZzB,KAAKzB,EAAKyD,WAEL,QAOT,EAAK1D,MAAQ,OA2BjB,OAzBGuD,IACDzD,KAAKqD,SAAS,CACZzB,KAAK,KAEP5B,KAAKE,MAAQA,EACVF,KAAKK,SAAS0C,QAAU,GACzB/C,KAAKK,SAAS2C,SAAQ,SAAA7C,GACpB,GAAGA,EAAKD,MAAM,CAAC,IACRJ,EAAuBK,EAAvBL,cAAc2C,EAAStC,EAATsC,MACVA,EAAME,MAAK,SAAAxC,GAAI,MAAqB,oBAAVA,IACnCiD,CAAG,CAACtD,kBAAJ,UAAiC2C,EAAMtC,EAAKD,OACzCc,MAAK,SAAAC,GACJd,EAAKkD,SAAS,CACZzB,KAAK,QAGRT,OAAM,SAAAC,GACLjB,EAAKkD,SAAS,CACZzB,KAAKR,YAOZqC,I,+BAKL,IAAIpE,EAAKqD,EACT1C,KAAKyC,MAAMO,SAAQ,SAAA7C,GACdA,EAAKd,KACNA,EAAOc,EAAKd,KACLc,EAAKuC,WACZA,EAAWvC,EAAKuC,aAIpB,IAMImB,EAAW7D,KAAKT,MAAM0C,SAAS1C,MAAMuE,WANxB,CACf,OAAS,SACT,OAAS,SACT,MAAQ,SAKV,OACE,yBAAKC,MAAO,CAACC,QAAQ,OAAOC,aAAa,OAAOC,eAAe,SAASC,WAAW,eAC7EN,EAAiL,GAAtK,2BAAOO,QAASpE,KAAK4C,MAAOmB,MAAO,CAACM,YAAY,OAAOC,UAAU,MAAM9B,MAAM,UAAWE,EAAW,0BAAMqB,MAAO,CAACQ,MAAM,QAApB,KAAuC,GAAIvE,KAAK4C,MAAnJ,MACb,yBAAKmB,MAAO,CAACC,QAAQ,OAAOQ,cAAc,SAASN,eAAe,aAAaC,WAAW,eACvFrC,IAAMK,aAAanC,KAAKT,MAAM0C,SAAS,CAACzC,KAAKQ,KAAKR,KAAKiF,MAAM,GAAGpF,OAAKyD,SAAS9C,KAAK8C,SAASiB,MAAM,CAACvB,MAAMxC,KAAKwC,MAAMkC,OAAQ1E,KAAKd,MAAM0C,KAAO,gBAAkB,MAChK5B,KAAKd,MAAM0C,KAAO,0BAAMmC,MAAO,CAACQ,MAAM,MAAMI,MAAM,OAAOC,OAAO,QAAS5E,KAAKd,MAAM0C,MAAe,S,GA9H7FE,IAAM+C,eCadzF,G,OAdA,CACX0F,MADW,SACLC,GACF,MAAO,CACH1F,KHLY,WGMZ0F,YAGRC,IAPW,SAOPD,GACA,MAAO,CACH1F,KHVU,aIWhB4F,E,kDACF,WAAY1F,GAAO,IAAD,8BACd,cAAMA,IACDL,MAAQ,CACTgG,MAAM,IAGV,EAAKxF,cAAgB,EAAKA,cAAcE,KAAnB,gBACrB,EAAKH,SAAW,EAAKA,SAASG,KAAd,gBAChB,EAAKuF,QAAU,EAAKA,QAAQvF,KAAb,gBARD,E,qDAWTwF,GAAQ,IACTC,EAASD,EAATC,MACJC,OAAOC,aAAaC,QAAQ,QAAQH,GACpCrF,KAAKT,MAAMuF,U,oCAGDM,GAAQ,IACbxB,EAAWwB,EAAXxB,QACL5D,KAAKqD,SAAS,CACV6B,MAAMtB,M,gCAKV5D,KAAKT,MAAMkG,QAAQnF,KAAK,W,+BAIxB,OAAGN,KAAKT,MAAMJ,QACH,kBAAC,IAAD,CAAUuG,GAAG,MAEb,6BACK,yBAAK3B,MAAO,CAAC4B,SAAS,QAAQ3B,QAAQ,OAAOQ,cAAc,SAASN,eAAe,eAAeC,WAAW,SAASyB,IAAI,IAAIC,KAAK,IAAIrD,MAAM,QAAQsD,OAAO,QAAQpB,OAAO,sBACvK,qEACA,+DAEJ,yBAAKqB,UAAU,aACd/F,KAAKd,MAAMgG,MAAQ,0BAAMnB,MAAO,CAACQ,MAAM,QAASvE,KAAKd,MAAMgG,OAAgB,GAC5E,kBAAC,EAAD,CACI9F,OA3Cd4G,aA4CcvG,SAAUO,KAAKP,SACfC,cAAeM,KAAKN,eAEpB,kBAAC,EAAD,CACIkD,MAAM,WACNpD,KAAK,WACLiD,MAAO,CACH,CACIC,UAAU,EACVkB,QAAS,iCAIjB,kBAAC,IAAD,OAEJ,kBAAC,EAAD,CACIhB,MAAM,WACNpD,KAAK,WACLiD,MAAO,CACH,CACIpD,KAAK,WACLuE,QAAQ,gBAEZ,CACIlB,UAAU,EACVkB,QAAS,4BAIjB,kBAAC,IAAD,OAEJ,kBAAC,EAAD,CAAUpB,MAAM,SACZ,kBAAC,IAAD,CAAQnD,KAAK,UAAUyE,SAAS,UAAhC,iBAIJ,kBAAC,EAAD,CAAUtB,MAAM,SACZ,kBAAC,IAAD,CAAQnD,KAAK,UAAUyE,SAAS,SAASmC,QAASjG,KAAKmF,SAAvD,uB,GA/EZrD,IAAMQ,WAyFX4D,eAAQ,SAAAhH,GAAK,sBAAOA,KAAQE,EAA5B8G,CAAoCjB,G,2BC6GpCkB,E,kDAtMX,WAAY5G,GAAO,IAAD,8BACd,cAAMA,IAEDG,cAAgB,EAAKA,cAAcE,KAAnB,gBAErB,EAAKH,SAAW,EAAKA,SAASG,KAAd,gBAEhB,EAAKwG,WAAa,EAAKA,WAAWxG,KAAhB,gBAElB,EAAKV,MAAM,CACPmH,QAAQ,iCACRzE,MAAK,EACLsD,MAAM,GACNoB,QAAQ,IAbE,E,qDAiBTlB,GACFpF,KAAKd,MAAMoH,SAAWtG,KAAKd,MAAM0C,MAChC5B,KAAKT,MAAMkG,QAAQc,QAAQ,Y,oCAIrBnB,GAAQ,IACbxB,EAAWwB,EAAXxB,QACL5D,KAAKqD,SAAS,CACV6B,MAAMtB,M,0EAIGrD,G,mFACTiG,EAAaxG,KAAKC,KAAKwG,GAAGxG,KAAKyG,MAAMxG,QAMjCyG,EAAO,GACR3G,KAAKd,MAAM0C,OACNgF,EAAQC,aAAY,WACjBF,EAAK,EACJ,EAAKtD,SAAS,CACVgD,QAAQ,IAAMM,IAAS,6BACvB/E,MAAK,KAGT,EAAKyB,SAAS,CACVgD,QAAQ,iCACRzE,MAAK,IAETgF,GAASE,cAAcF,MAE7B,KACFlG,IAAMqG,IAzDLf,eAyDkB,CACfgB,OAAO,CACHN,MAAMF,KAEXxF,MAAK,SAAAiG,GAAQ,IAAD,EACUA,EAAIpG,KAApBK,EADM,EACNA,KAAK0C,EADC,EACDA,QACE,IAAT1C,GACC,EAAKmC,SAAS,CACV6B,MAAMtB,EAAQ,iCACdyC,QAAQ,iCACRzE,MAAK,IAETgF,GAASE,cAAcF,IACT,IAAT1F,IACLqC,QAAQC,IAAI,eACZoD,GAASE,cAAcF,GACvB,EAAKvD,SAAS,CACVzB,MAAK,EACLyE,QAAQ,2BACRnB,MAAM,GACNoB,SAAQ,QAGjBnF,OAAM,SAAAC,GACL,EAAKiC,SAAS,CACV6B,MAAM9D,EAAIwC,QACVyC,QAAQ,iCACRzE,MAAK,IAENgF,GACCE,cAAcF,QAlD1B5G,KAAKqD,SAAS,CACV6B,MAAM,mC,sIAyDV,OAAO,yBAAKnB,MAAO,CAAC4B,SAAS,WAAWC,IAAI,MAAMC,KAAK,MAAMvB,UAAU,SAAS4C,WAAW,WAC9ElH,KAAKd,MAAMgG,MAAQ,0BAAMnB,MAAO,CAACQ,MAAM,QAASvE,KAAKd,MAAMgG,OAAgB,GAC5E,kBAAC,EAAD,CACI9F,OAjGX4G,gBAkGWvG,SAAUO,KAAKP,SACfC,cAAeM,KAAKN,cACpB0C,IAAI,MAEJ,kBAAC,EAAD,CACIQ,MAAM,WACNpD,KAAK,WACLiD,MAAO,CACH,CACIC,UAAU,EACVkB,QAAS,iCAIjB,kBAAC,IAAD,OAEJ,kBAAC,EAAD,CACIhB,MAAM,WACNpD,KAAK,WACLiD,MAAO,CACH,CACIpD,KAAK,WACLuE,QAAQ,gBAEZ,CACIlB,UAAU,EACVkB,QAAS,4BAIjB,kBAAC,IAAD,OAEJ,kBAAC,EAAD,CACIhB,MAAM,kBACNpD,KAAK,kBACL2H,WAAY,CAAC,YACb1E,MAAO,CACH,CACIpD,KAAK,WACLuE,QAAQ,gBAEZ,CACIlB,UAAU,EACVkB,QAAS,0BAEb,gBAAE9D,EAAF,EAAEA,cAAF,MAAsB,CAClB6B,UADkB,SACRwB,EAAMjD,GACd,OAAKA,GAASJ,EAAc,cAAgBI,EAIrCkH,QAAQC,OAAO,oDAFbD,QAAQE,eAQ3B,kBAAC,IAAD,OAEJ,kBAAC,EAAD,CACI1E,MAAM,QACNpD,KAAK,QACLiD,MAAO,CACH,CACIpD,KAAK,QACLuE,QAAQ,gBAEZ,CACIlB,UAAU,EACVkB,QAAS,4BAIjB,kBAAC,IAAD,OAEJ,kBAAC,EAAD,CACIhB,MAAM,UACNpD,KAAK,UACL+H,SAAO,EACP9E,MAAO,CACH,CACAC,UAAU,EACVkB,QAAS,uCAIb,kBAAC,IAAD,OAEJ,kBAAC,EAAD,CAAUpB,MAAM,SACZ,kBAAC,IAAD,CAAQnD,KAAK,UAAUyE,SAAS,SAASmC,QAASjG,KAAKoG,YAClDpG,KAAKd,MAAMmH,UAGpB,kBAAC,EAAD,CAAU7D,MAAM,SACZ,kBAAC,IAAD,CAAQnD,KAAK,UAAUyE,SAAS,UAAhC,uB,GA9LbhC,IAAMQ,W,kBCFnBkF,E,kDACF,WAAYjI,GAAO,IAAD,8BACd,cAAMA,IACDkI,OAAS,GACd,EAAKvI,MAAQ,CACTwI,SAAS,GACTC,QAAQ,GACRC,MAAM,6BAEV,EAAKC,SAAW,EAAKA,SAASjI,KAAd,gBAChB,EAAKkI,IAAM,EAAKA,IAAIlI,KAAT,gBATG,E,gEAYE,IAAD,OACfc,IAAMqG,IAhBEgB,gBAgBW/G,MAAK,SAAAiG,GAAQ,IACvBpG,EAAQoG,EAARpG,KACC6G,EAAW,GACXC,EAAU,CACZ,CACIlD,MAAO,SACPuD,UAAW,SACXC,IAAK,SACLC,OAAQ,SAAAC,GAAI,OAAI,yBAAKpE,MAAO,CAACvB,MAAM,QAAQsD,OAAO,SAAUsC,IC/BlE,GD+BiFD,EAAME,IAAI,iBAEvF,CACE5D,MAAO,aACPuD,UAAW,aACXC,IAAK,cAEP,CACExD,MAAO,YACPuD,UAAW,YACXC,IAAK,aAEP,CACExD,MAAO,QACPuD,UAAW,QACXC,IAAK,SAEP,CACExD,MAAO,SACPwD,IAAK,SACLC,OAAQ,SAACC,EAAMG,GAAP,OACN,kBAAC,IAAD,CAAOC,KAAK,UACV,kBAAC,IAAD,CAAQlJ,KAAK,SAAS4G,QAAS,kBAAK,EAAK6B,IAAIK,EAAKG,KAAlD,cAKZzH,EAAKmC,SAAQ,SAAA7C,GACTuH,EAASpH,KAAK,CAAC2H,IAAI9H,EAAI,IAAQqI,OAAOrI,EAAKqI,OAAOC,WAAWtI,EAAKsI,WAAWC,UAAUvI,EAAKuI,UAAUC,MAAMxI,EAAKwI,WAErH,EAAKtF,SAAS,CACVqE,WACAC,iB,0BAKRQ,EAAKG,GAAQ,IAAD,OAERM,EAAOC,gBADDP,EAAOI,UAGjBhI,IAAMoI,OAAOF,GAAM5H,MAAK,SAAAC,GACtBP,IAAMqG,IAlEAgB,gBAkEa/G,MAAK,SAAAiG,GAAQ,IACvBpG,EAAQoG,EAARpG,KACC6G,EAAW,GACXC,EAAU,CACZ,CACIlD,MAAO,SACPuD,UAAW,SACXC,IAAK,SACLC,OAAQ,SAAAC,GAAI,OAAI,yBAAKpE,MAAO,CAACvB,MAAM,QAAQsD,OAAO,SAAUsC,ICjFpE,GDiFmFD,EAAME,IAAI,iBAEvF,CACE5D,MAAO,aACPuD,UAAW,aACXC,IAAK,cAEP,CACExD,MAAO,YACPuD,UAAW,YACXC,IAAK,aAEP,CACExD,MAAO,QACPuD,UAAW,QACXC,IAAK,SAEP,CACExD,MAAO,SACPwD,IAAK,SACLC,OAAQ,SAACC,EAAMG,GAAP,OACN,kBAAC,IAAD,CAAOC,KAAK,UACV,kBAAC,IAAD,CAAQlJ,KAAK,SAAS4G,QAAS,kBAAK,EAAK6B,IAAIK,EAAKG,KAAlD,cAKZzH,EAAKmC,SAAQ,SAAA7C,GACTuH,EAASpH,KAAK,CAAC2H,IAAI9H,EAAI,IAAQqI,OAAOrI,EAAKqI,OAAOC,WAAWtI,EAAKsI,WAAWC,UAAUvI,EAAKuI,UAAUC,MAAMxI,EAAKwI,WAErH,EAAKtF,SAAS,CACVqE,WACAC,kBAGTxG,OAAM,SAAAC,GACLmC,QAAQC,IAAIpC,Q,iCAKd,IAAI2H,EAAS,GACb,GAAI/I,KAAKyH,OAWLzH,KAAKqD,SAAS,CACVqE,SAAS1H,KAAKyH,OACdG,MAAM,8BAEV5H,KAAKyH,OAAS,OAfF,CACZzH,KAAKyH,OAASzH,KAAKd,MAAMwI,SACzB1H,KAAKd,MAAMwI,SAAS1E,SAAQ,SAAA7C,GACxB4I,EAAOzI,KAAKH,MAEhB,IAAI6I,EAAOD,EAAOE,QAAO,SAAA9I,GAAI,OAAI+I,SAAS/I,EAAI,OAAa,KAC3DH,KAAKqD,SAAS,CACVqE,SAASsB,EACTpB,MAAM,oB,+BAYd,OAAO,yBAAK7D,MAAO,CAACvB,MAAM,QAAQoC,OAAO,cACrC,kBAAC,IAAD,CAAQqB,QAASjG,KAAK6H,UAAW7H,KAAKd,MAAM0I,OAC5C,kBAAC,IAAD,CAAO7D,MAAO,CAACO,UAAU,QAASiE,KAAK,QAAQY,WAAY,CAACxD,SAAS,CAAC,gBAAgByD,MAAM,KAAKC,SAAS,KAAM1B,QAAS3H,KAAKd,MAAMyI,QAAS2B,WAAYtJ,KAAKd,MAAMwI,gB,GAxI7J5F,IAAMQ,WA6IV4D,eAAQ,SAAAhH,GAAK,OAAEA,IAAME,EAArB8G,CAA6BsB,G,SErH7BtB,mBAAQ,SAAAhH,GAAK,OAAEA,IAAME,EAArB8G,EA1Bf,YAA6D,IAA7BqD,EAA4B,EAAtCC,UAAerK,EAAuB,EAAvBA,QAAQ2F,EAAe,EAAfA,MAAS2E,EAAM,+CAElDpE,EAAQC,OAAOC,aAAamE,QAAQ,UAAY,GAEtD,GAAGrE,EACC,IACI3E,IAAMqG,IAHDf,gBAGY,CACb2D,QAAQ,CACN,+BAA4BtE,MAE/BrE,MAAK,SAAAyC,GACJqB,OACD3D,OAAM,SAAAC,GACLkE,OAAOC,aAAaqE,WAAW,SAC/BC,MAAM,8DAEZ,MAAOvG,GACLC,QAAQC,IAAI,SAIpB,OAAO,kBAAC,IAAD,CAAO0E,OAAQ,WAClB,OAAO/I,EAAU,kBAACoK,EAASE,GAAgB,kBAAC,IAAD,CAAU/D,GAAI,CAACoE,SAAS,kB,OCJ5DC,MAjBf,WACE,OACE,yBAAKhE,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAaiE,KAAK,IAAIC,OAAK,EAACT,UAAWhC,IACvC,kBAAC,IAAD,CAAOwC,KAAK,SAASR,UAAWvE,IAChC,kBAAC,IAAD,CAAO+E,KAAK,QAAQR,UAAWrD,IAC/B,kBAAC,IAAD,CAAO+B,OAAQ,WACb,OAAO,2CCLCgC,QACW,cAA7B5E,OAAO6E,SAASC,UAEe,UAA7B9E,OAAO6E,SAASC,UAEhB9E,OAAO6E,SAASC,SAASC,MACvB,2DCVNC,IAASpC,OACP,kBAAC,IAAD,CAAUlJ,MAAOA,GACf,kBAAC,EAAD,OAGFuL,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3J,MAAK,SAAA4J,GACJA,EAAaC,gBAEd1J,OAAM,SAAAmC,GACLC,QAAQD,MAAMA,EAAMM,c","file":"static/js/main.764fcc96.chunk.js","sourcesContent":["import {createStore} from 'redux';\r\nimport {IS_LOGIN,IS_OUT} from \"./type.js\"\r\n\r\nfunction reducer(state = {\r\n    isLogin:false\r\n},action){\r\n    switch (action.type) {\r\n        case IS_LOGIN:\r\n            state = {\r\n                isLogin:true\r\n            }            \r\n            break;\r\n        case IS_OUT:\r\n            state = {\r\n                isLogin:false\r\n            }\r\n            break;\r\n    }\r\n    return state\r\n}\r\n\r\nconst store = createStore(reducer)\r\n\r\nexport default store","export const IS_LOGIN = \"IS_LOGIN\"\r\nexport const IS_OUT = \"IS_OUT\"","import React from \"react\"\r\nimport axios from \"axios\"\r\nimport qs from \"qs\"\r\n\r\nclass Form extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.name = props.name\r\n        this.onFinish = props.onFinish || \"\"\r\n        this.onFinishField = props.onFinishField || \"\"\r\n        this.action = props.action\r\n\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.addDepend = this.addDepend.bind(this)\r\n        \r\n        this.getFieldValue = this.getFieldValue.bind(this)\r\n    }\r\n\r\n    getFieldValue(depEl){\r\n        let refs = this.refs\r\n        let depValue = refs[depEl].value\r\n        return depValue\r\n    }\r\n\r\n    addDepend(item,el){\r\n        let refs = this.refs\r\n        refs[item].listener.push(el)\r\n    }\r\n\r\n    onSubmit(e){\r\n        let values = {}\r\n        let refs = this.refs\r\n        let action = this.action\r\n        //验证\r\n        let result = this.validate(refs,values)\r\n        \r\n        if(result){\r\n            axios({\r\n                method:\"post\",\r\n                url:action,\r\n                data:qs.stringify(values)\r\n            }).then(success => {\r\n                let {code} = success.data\r\n                if(code === 0){\r\n                    this.onFinish(success.data)\r\n                }else{\r\n                    this.onFinishField(success.data)\r\n                }\r\n            }).catch(err => {\r\n                this.onFinishField(err)\r\n            })\r\n        }\r\n        e.preventDefault()\r\n    }\r\n\r\n    validate(refs,vals){\r\n        let rets = Object.keys(refs).every(item => {\r\n            let formitem = refs[item]\r\n            vals[item] = formitem.value\r\n            return formitem.validator(formitem[\"rules\"],formitem[\"value\"]) && !formitem.state.sign\r\n\r\n            // if(refs[item].required && !refs[item].value){\r\n            //     refs[item].setState({\r\n            //         sign:`Please enter ${item}`\r\n            //     })     \r\n            //     return false      \r\n            // }else{        \r\n            //     vals[item] = refs[item].value\r\n            //     return true\r\n            // }\r\n        })\r\n        \r\n        return rets\r\n    }\r\n\r\n    render(){\r\n        let newChildren = React.Children.map(this.props.children,child => React.cloneElement(child,{ref:child.props.name,addDepend:this.addDepend,getFieldValue:this.getFieldValue}))\r\n        return <form onSubmit={this.onSubmit} noValidate>\r\n            {/* <Provider value={{foo:\"123\"}}> */}\r\n                {newChildren}\r\n            {/* </Provider> */}\r\n        </form>\r\n    }\r\n}\r\n\r\nexport default Form","// import { Form, Input, Button, Checkbox } from 'antd';\r\nimport React from \"react\"\r\n\r\nclass FormItem extends React.PureComponent{\r\n\r\n    // static contextType = MyContext\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.width = props.width || \"700px\"\r\n\r\n        this.rules = props.rules || []\r\n        this.required = this.rules.find(item => item.required === true) ? true : false\r\n\r\n        this.label = props.label || \"\"\r\n        this.name = props.name || \"\"\r\n        \r\n        this.dependencies = props.dependencies || \"\"\r\n        this.onChange = this.onChange.bind(this)\r\n\r\n        this.listener = []\r\n\r\n        this.addDepend = props.addDepend\r\n\r\n        this.getFieldValue = props.getFieldValue\r\n\r\n        this.value = \"\"\r\n        this.state = {\r\n          sign:\"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n      if(this.dependencies.length >= 1){\r\n        this.dependencies.forEach(item => {\r\n          this.addDepend(item,this)\r\n        })\r\n      }\r\n    }\r\n\r\n    onChange(e){\r\n      let val = e.target.value \r\n      let name = e.target.name \r\n      let getFieldValue = this.getFieldValue\r\n      let rule = this.rules \r\n      let fn = rule.find(item => typeof item === \"function\")\r\n      if(fn){\r\n        try {\r\n          fn({getFieldValue})[\"validator\"](this.rules,val)\r\n          .catch(err => {\r\n            this.setState({\r\n              sign:err\r\n            })\r\n          })\r\n        } catch (error) {\r\n          console.log(\"Error : need validator\")\r\n        }\r\n      }\r\n      this.validator(rule,val,name,fn,getFieldValue)\r\n    }\r\n\r\n    validator(rule,value,name){\r\n      let ret = !rule.some(item => {\r\n          if(item[\"required\"] && !value){\r\n            this.setState({\r\n              sign:item.message\r\n            })\r\n            return true \r\n          }else if((item[\"type\"] === \"email\") && value && !(/^[a-zA-Z0-9]+([-_.][a-zA-Z0-9]+)*@[a-zA-Z0-9]+([-_.][a-zA-Z0-9]+)*\\.[a-z]{2,}$/.test(value))){\r\n            this.setState({\r\n              sign:item.message\r\n            })\r\n            return true\r\n          }\r\n          this.value = \"\"\r\n        })\r\n      if(ret){\r\n        this.setState({\r\n          sign:\"\"\r\n        })\r\n        this.value = value\r\n        if(this.listener.length >= 0){\r\n          this.listener.forEach(item => {          \r\n            if(item.value){\r\n              let {getFieldValue,rules} = item\r\n              let fn = rules.find(item => typeof(item) === \"function\")\r\n              fn({getFieldValue})[\"validator\"](rules,item.value)\r\n                .then(success => {\r\n                  item.setState({\r\n                    sign:\"\"\r\n                  })\r\n                })\r\n                .catch(err => {\r\n                  item.setState({\r\n                    sign:err\r\n                  })\r\n                })\r\n            }\r\n          })\r\n        }\r\n      }\r\n      return ret\r\n    }\r\n\r\n    render(){\r\n\r\n        let type,required\r\n        this.rules.forEach(item => {\r\n          if(item.type){\r\n            type = item.type\r\n          }else if(item.required){\r\n            required = item.required\r\n          }\r\n        })\r\n\r\n        let buttonType = {\r\n          \"submit\":\"submit\",\r\n          \"button\":\"button\",\r\n          \"reset\":\"reset\"\r\n        }\r\n\r\n        let isButton = this.props.children.props.htmlType in buttonType\r\n\r\n        return (\r\n          <div style={{display:\"flex\",marginBottom:\"20px\",justifyContent:\"center\",alignItems:\"flex-start\"}}>\r\n              {!isButton ? <label htmlFor={this.label} style={{marginRight:\"10px\",marginTop:\"5px\",width:\"120px\"}}>{required ? <span style={{color:\"red\"}}>*</span> : \"\"}{this.label} :</label> : \"\"}\r\n              <div style={{display:\"flex\",flexDirection:\"column\",justifyContent:\"flex-start\",alignItems:\"flex-start\"}}>\r\n                {React.cloneElement(this.props.children,{name:this.name,title:\"\",type,onChange:this.onChange,style:{width:this.width,border:(this.state.sign ? \"1px solid red\" : \"\")}})}\r\n                {this.state.sign ? <span style={{color:\"red\",float:\"left\",margin:\"0px\"}}>{this.state.sign}</span> : \"\"}\r\n              </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FormItem","import {IS_OUT,IS_LOGIN} from \"./type.js\"\r\n\r\nconst action = {\r\n    login(payload){\r\n        return {\r\n            type:IS_LOGIN,\r\n            payload\r\n        }\r\n    },\r\n    out(payload){\r\n        return {\r\n            type:IS_OUT\r\n        }\r\n    }\r\n}\r\n\r\nexport default action","import React from \"react\"\r\nimport {Input, Button} from \"antd\"\r\nimport Form from \"../components/Form\"\r\nimport FormItem from \"../components/FormItem\"\r\nimport \"./style/Login.css\"\r\nimport action from \"../store/action.js\"\r\nimport {connect} from \"react-redux\"\r\nimport { Redirect } from \"react-router\"\r\nimport {userurl} from \"../routerconfig.js\"\r\n\r\nconst login = userurl + \"/login\"\r\n\r\nclass Login extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            wrong:\"\"\r\n        }\r\n\r\n        this.onFinishField = this.onFinishField.bind(this)\r\n        this.onFinish = this.onFinish.bind(this)\r\n        this.runSign = this.runSign.bind(this)\r\n    }\r\n\r\n    onFinish(result){\r\n        let{token} = result\r\n        window.localStorage.setItem(\"token\",token)\r\n        this.props.login()\r\n    }\r\n\r\n    onFinishField(result){\r\n        let {message} = result\r\n        this.setState({\r\n            wrong:message\r\n        })\r\n    }\r\n\r\n    runSign(){\r\n        this.props.history.push(\"/sign\")\r\n    }\r\n\r\n    render(){\r\n        if(this.props.isLogin){\r\n            return <Redirect to=\"/\"></Redirect>\r\n        }else{\r\n            return <div>\r\n                        <div style={{position:\"fixed\",display:\"flex\",flexDirection:\"column\",justifyContent:\"space-around\",alignItems:\"center\",top:\"0\",left:\"0\",width:\"200px\",height:\"100px\",border:\"1px solid #e7e7e7\"}}>\r\n                            <div>默认用户名:zhang</div>\r\n                            <div>默认密码:1234</div>\r\n                        </div>\r\n                        <div className=\"indexImg\"></div>\r\n                        {this.state.wrong ? <span style={{color:\"red\"}}>{this.state.wrong}</span> : \"\"}\r\n                        <Form\r\n                            action= {login}\r\n                            onFinish={this.onFinish}\r\n                            onFinishField={this.onFinishField}\r\n                        >\r\n                            <FormItem\r\n                                label=\"username\"\r\n                                name=\"username\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please input your username!',\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input/>\r\n                            </FormItem>\r\n                            <FormItem\r\n                                label=\"password\"\r\n                                name=\"password\"\r\n                                rules={[\r\n                                    {\r\n                                        type:\"password\",\r\n                                        message:\"not password\"\r\n                                    },\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please input password!',\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input/>\r\n                            </FormItem>\r\n                            <FormItem width=\"200px\">\r\n                                <Button type=\"primary\" htmlType=\"submit\">\r\n                                    登录\r\n                                </Button>\r\n                            </FormItem>\r\n                            <FormItem width=\"200px\">\r\n                                <Button type=\"primary\" htmlType=\"button\" onClick={this.runSign}>\r\n                                    注册\r\n                                </Button>\r\n                            </FormItem>\r\n                        </Form>\r\n                    </div>\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(state=>({...state}),action)(Login)","import React from \"react\"\r\nimport {Input, Button} from \"antd\"\r\nimport Form from \"../components/Form\"\r\nimport FormItem from \"../components/FormItem\"\r\nimport \"./style/Login.css\"\r\nimport axios from \"axios\"\r\nimport {userurl} from \"../routerconfig.js\"\r\n\r\nconst captchas = userurl + \"/captcha\"\r\nconst register = userurl + \"/register\"\r\n\r\nclass Sign extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.onFinishField = this.onFinishField.bind(this)\r\n\r\n        this.onFinish = this.onFinish.bind(this)\r\n\r\n        this.getCaptcha = this.getCaptcha.bind(this)\r\n\r\n        this.state={\r\n            captcha:\"发送验证码\",\r\n            sign:true,\r\n            wrong:\"\",\r\n            gologin:\"\"\r\n        }\r\n    }\r\n\r\n    onFinish(result){\r\n        if(this.state.gologin && this.state.sign){\r\n            this.props.history.replace(\"/login\")\r\n        }\r\n    }\r\n\r\n    onFinishField(result){\r\n        let {message} = result\r\n        this.setState({\r\n            wrong:message\r\n        })\r\n    }\r\n\r\n    async getCaptcha(e){\r\n        let emailvalue = this.refs.c1.refs.email.value\r\n        if(!emailvalue){\r\n            this.setState({\r\n                wrong:\"请填写邮箱\"\r\n            })\r\n        }else{\r\n            let time = 60\r\n            if(this.state.sign){\r\n                let timer = setInterval(()=>{\r\n                    if(time>0){\r\n                        this.setState({\r\n                            captcha:\"(\" + time-- + \"s)重新发送\",\r\n                            sign:false\r\n                        })\r\n                    }else{\r\n                        this.setState({\r\n                            captcha:\"发送验证码\",\r\n                            sign:true\r\n                        })\r\n                        timer && clearInterval(timer)\r\n                    }\r\n                },1000)\r\n                axios.get(captchas,{\r\n                    params:{\r\n                        email:emailvalue\r\n                    }\r\n                }).then(res => {\r\n                    let {code,message} = res.data\r\n                    if(code === 1){\r\n                        this.setState({\r\n                            wrong:message+\"邮箱不存在\",\r\n                            captcha:\"发送验证码\",\r\n                            sign:true\r\n                        })\r\n                        timer && clearInterval(timer)\r\n                    }else if(code === 0){\r\n                        console.log(\"captcha 666\")\r\n                        timer && clearInterval(timer)\r\n                        this.setState({\r\n                            sign:true,\r\n                            captcha:\"发送成功\",\r\n                            wrong:\"\",\r\n                            gologin:true\r\n                        })\r\n                    }\r\n                }).catch(err => {\r\n                    this.setState({\r\n                        wrong:err.message,\r\n                        captcha:\"发送验证码\",\r\n                        sign:true\r\n                    })\r\n                    if(timer){\r\n                        clearInterval(timer)\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n            return <div style={{position:\"absolute\",top:\"50%\",left:\"50%\",marginTop:\"-130px\",marginLeft:\"-415px\"}}>\r\n                        {this.state.wrong ? <span style={{color:\"red\"}}>{this.state.wrong}</span> : \"\"}\r\n                        <Form\r\n                            action={register}\r\n                            onFinish={this.onFinish}\r\n                            onFinishField={this.onFinishField}\r\n                            ref=\"c1\"\r\n                        >\r\n                            <FormItem\r\n                                label=\"username\"\r\n                                name=\"username\"\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please input your username!',\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input/>\r\n                            </FormItem>\r\n                            <FormItem\r\n                                label=\"password\"\r\n                                name=\"password\"\r\n                                rules={[\r\n                                    {\r\n                                        type:\"password\",\r\n                                        message:\"not password\"\r\n                                    },\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please input password!',\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input/>\r\n                            </FormItem>\r\n                            <FormItem\r\n                                label=\"confirmpassword\"\r\n                                name=\"confirmpassword\"\r\n                                dependcies={['password']}\r\n                                rules={[\r\n                                    {\r\n                                        type:\"password\",\r\n                                        message:\"not password\"\r\n                                    },\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please input password!',\r\n                                    },\r\n                                    ({getFieldValue}) => ({\r\n                                        validator(rule, value) {\r\n                                          if (!value || getFieldValue('password') === value) {\r\n                                            \r\n                                            return Promise.resolve();\r\n                                          }\r\n                                          return Promise.reject('The two passwords that you entered do not match!');\r\n                                        },\r\n                                    })\r\n                                ]}\r\n                                \r\n                            >\r\n                                <Input/>\r\n                            </FormItem>\r\n                            <FormItem\r\n                                label=\"email\"\r\n                                name=\"email\"\r\n                                rules={[\r\n                                    {\r\n                                        type:\"email\",\r\n                                        message:\"not a email!\"\r\n                                    },\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please input password!',\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input/>\r\n                            </FormItem>\r\n                            <FormItem\r\n                                label=\"captcha\"\r\n                                name=\"captcha\"\r\n                                noStyle\r\n                                rules={[\r\n                                    {\r\n                                    required: true,\r\n                                    message: 'Please input the captcha you got!',\r\n                                    }\r\n                                ]}\r\n                                >\r\n                                <Input />\r\n                            </FormItem>\r\n                            <FormItem width=\"200px\">\r\n                                <Button type=\"primary\" htmlType=\"button\" onClick={this.getCaptcha}>\r\n                                    {this.state.captcha}\r\n                                </Button>\r\n                            </FormItem>\r\n                            <FormItem width=\"200px\">\r\n                                <Button type=\"primary\" htmlType=\"submit\">\r\n                                    注册\r\n                                </Button>\r\n                            </FormItem>\r\n                        </Form>\r\n                    </div>\r\n    }\r\n}\r\n\r\nexport default Sign","import React from \"react\"\r\nimport { Table,Space,Button} from 'antd';\r\nimport action from \"../store/action.js\"\r\nimport {connect} from \"react-redux\"\r\nimport axios from \"axios\"\r\nimport {personurl,rooturl} from \"../routerconfig.js\"\r\n\r\nconst persons = personurl + \"/person\"\r\n\r\nclass Home extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.zancun = \"\"\r\n        this.state = {\r\n            datawant:\"\",\r\n            columns:\"\",\r\n            btext:\"找9年以下\"\r\n        }\r\n        this.lessNine = this.lessNine.bind(this)\r\n        this.del = this.del.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get(persons).then(res => {\r\n            let {data} = res\r\n            const datawant = []\r\n            const columns = [\r\n                {\r\n                    title: 'Avatar',\r\n                    dataIndex: 'avatar',\r\n                    key: 'avatar',\r\n                    render: text => <img style={{width:\"150px\",height:\"150px\"}} src={rooturl + text} alt=\"loading...\"></img>,\r\n                  },\r\n                  {\r\n                    title: 'Personname',\r\n                    dataIndex: 'personname',\r\n                    key: 'personname',\r\n                  },\r\n                  {\r\n                    title: 'Jobnumber',\r\n                    dataIndex: 'jobnumber',\r\n                    key: 'jobnumber',\r\n                  },\r\n                  {\r\n                    title: 'Years',\r\n                    dataIndex: 'years',\r\n                    key: 'years',\r\n                  },\r\n                  {\r\n                    title: 'Action',\r\n                    key: 'action',\r\n                    render: (text, record) => (\r\n                      <Space size=\"middle\">\r\n                        <Button type=\"danger\" onClick={()=> this.del(text,record)}>Delete</Button>\r\n                      </Space>\r\n                    ),\r\n                  }\r\n            ]\r\n            data.forEach(item => {\r\n                datawant.push({key:item[\"_id\"],avatar:item.avatar,personname:item.personname,jobnumber:item.jobnumber,years:item.years})\r\n            })\r\n            this.setState({\r\n                datawant,\r\n                columns\r\n            })\r\n        })\r\n    }\r\n\r\n    del(text,record){\r\n        let num = record.jobnumber\r\n        let pers = persons + \"/\" + num\r\n\r\n        axios.delete(pers).then(success => {\r\n          axios.get(persons).then(res => {\r\n              let {data} = res\r\n              const datawant = []\r\n              const columns = [\r\n                  {\r\n                      title: 'Avatar',\r\n                      dataIndex: 'avatar',\r\n                      key: 'avatar',\r\n                      render: text => <img style={{width:\"150px\",height:\"150px\"}} src={rooturl + text} alt=\"loading...\"></img>,\r\n                    },\r\n                    {\r\n                      title: 'Personname',\r\n                      dataIndex: 'personname',\r\n                      key: 'personname',\r\n                    },\r\n                    {\r\n                      title: 'Jobnumber',\r\n                      dataIndex: 'jobnumber',\r\n                      key: 'jobnumber',\r\n                    },\r\n                    {\r\n                      title: 'Years',\r\n                      dataIndex: 'years',\r\n                      key: 'years',\r\n                    },\r\n                    {\r\n                      title: 'Action',\r\n                      key: 'action',\r\n                      render: (text, record) => (\r\n                        <Space size=\"middle\">\r\n                          <Button type=\"danger\" onClick={()=> this.del(text,record)}>Delete</Button>\r\n                        </Space>\r\n                      ),\r\n                    }\r\n              ]\r\n              data.forEach(item => {\r\n                  datawant.push({key:item[\"_id\"],avatar:item.avatar,personname:item.personname,jobnumber:item.jobnumber,years:item.years})\r\n              })\r\n              this.setState({\r\n                  datawant,\r\n                  columns\r\n              })\r\n          })\r\n      }).catch(err => {\r\n          console.log(err)\r\n      })\r\n    }\r\n\r\n    lessNine(){\r\n        let change = []\r\n        if(!this.zancun){\r\n            this.zancun = this.state.datawant\r\n            this.state.datawant.forEach(item => {\r\n                change.push(item)\r\n            })\r\n            let late = change.filter(item => parseInt(item[\"years\"]) < 9)\r\n            this.setState({\r\n                datawant:late,\r\n                btext:\"全部\"\r\n            })\r\n        }else{\r\n            this.setState({\r\n                datawant:this.zancun,\r\n                btext:\"找9年以下\"\r\n            })\r\n            this.zancun = \"\"\r\n        } \r\n    }\r\n\r\n    render(){\r\n        return <div style={{width:\"800px\",margin:\"10px auto\"}}>\r\n            <Button onClick={this.lessNine}>{this.state.btext}</Button>\r\n            <Table style={{marginTop:\"10px\"}} size=\"small\" pagination={{position:[\"bottomCenter\"],count:\"12\",pageSize:\"3\"}} columns={this.state.columns} dataSource={this.state.datawant} />\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default connect(state=>state,action)(Home)","const rooturl=\"\"\r\nconst userurl=\"/api\"\r\nconst personurl=\"/data\"\r\n\r\nexport {userurl,personurl,rooturl}","import React from \"react\"\r\nimport { Route, Redirect } from \"react-router\"\r\nimport action from \"../store/action.js\"\r\nimport {connect} from \"react-redux\"\r\nimport axios from \"axios\"\r\nimport {userurl} from \"../routerconfig.js\"\r\n\r\nfunction Providehome({component:Comp,isLogin,login,...rest}){\r\n\r\n    const token = window.localStorage.getItem(\"token\") || \"\"\r\n    let getcap = userurl + \"/gettoken\"\r\n    if(token){\r\n        try {\r\n            axios.get(getcap,{\r\n                headers:{\r\n                  \"Authorization\" : `Bearer ${token}`\r\n                }\r\n            }).then(ret => {\r\n                login()\r\n            }).catch(err => { \r\n                window.localStorage.removeItem(\"token\")      \r\n                alert(\"登录超时,请重新登录\")\r\n            })\r\n        } catch (error) {\r\n            console.log(\"shame\")\r\n        }\r\n    }\r\n\r\n    return <Route render={()=>{\r\n        return isLogin ? <Comp {...rest}></Comp> : <Redirect to={{pathname:\"/login\"}}></Redirect>\r\n    }}></Route>\r\n}\r\n\r\nexport default connect(state=>state,action)(Providehome)","import React from 'react';\nimport {BrowserRouter,Switch,Route} from 'react-router-dom'\nimport Login from './pages/Login.js'\nimport Sign from './pages/Sign.js'\nimport Home from './pages/Home.js'\nimport Providehome from './pages/Providehome.js'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Providehome path=\"/\" exact component={Home}></Providehome>\n          <Route path=\"/login\" component={Login}></Route>\n          <Route path=\"/sign\" component={Sign}></Route>\n          <Route render={()=>{\n            return <div>404</div>\n          }}></Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from \"./store/store.js\"\nimport {Provider} from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}